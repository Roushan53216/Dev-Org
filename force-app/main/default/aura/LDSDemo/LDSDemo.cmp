<aura:component implements="flexipage:availableForRecordHome,force:lightningQuickActionWithoutHeader,force:hasRecordId">

    <aura:attribute name="Account" type="sObject"/>
    <aura:attribute name="simpleRecord" type="Object" default="Account"/>
    <aura:attribute name="recordError" type="String"/>
    <aura:attribute name="recordId" type="String" default="0015j00000e5hTyAAI" />

    <force:recordData aura:id="recordLoader"
      fields="Name,BillingCity,BillingState,Industry"
      recordId="0015j00000e5hTyAAI"
      targetFields="{!v.simpleRecord}"
      targetError="{!v.recordError}"
      recordUpdated="{!c.handleRecordUpdated}"
      />
    <lightning:recordForm
        recordId="0015j00000e5hTyAAI"
        objectApiName="Account"
        layoutType="Compact"
        columns="2"/>
    <lightning:recordEditForm
        recordId="0015j00000e5hTyAAI"
        objectApiName="Account"
        
        />

    <!-- Display a lightning card with details about the record -->
    <div class="Record Details"> 
    <lightning:card iconName="standard:account" title="{!v.simpleRecord.Name}" >
        <div class="slds-p-horizontal--small">
            <p class="slds-text-heading--small">
                <lightning:formattedText title="Billing City" value="{!v.simpleRecord.BillingCity}" /></p>
            <p class="slds-text-heading--small">
                <lightning:formattedText title="Billing State" value="{!v.simpleRecord.BillingState}" /></p>
        </div>
    </lightning:card>
    </div>

    <!-- Display Lightning Data Service errors, if any -->
    <aura:if isTrue="{!not(empty(v.recordError))}">
        <div class="recordError">
            {!v.recordError}</div>
    </aura:if>
</aura:component>